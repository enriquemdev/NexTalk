---
description: This is the project rule file for NextTalk, a real-time audio discussion platform built with Next.js v15, TypeScript, Convex, Tailwind CSS, Shadcn, and AI integrations like OpenAI and Eleven Labs. It outlines the project's description, mission, vision, guidelines, and objectives to guide the development team.
globs: 
alwaysApply: true
---
# **NexTalk App Specification**

## **1. Project Overview**

**NexTalk** is a cutting-edge platform for hosting and participating in live audio discussions, with features like real-time reactions, AI-driven enhancements, and multimedia integrations. The app is designed to be:

- **Mobile-first and fully responsive**: Optimized for seamless use across devices.
- **Real-time and interactive**: Leveraging Convex for real-time data syncing and user interactions.
- **AI-powered**: Integrating OpenAI for recommendations, summaries, and translations, and Eleven Labs for speech-to-text and text-to-speech.
- **Pixel-perfect and modern**: Featuring a futuristic, spatial-like design with Tailwind and Shadcn.
- **High-performance**: Utilizing Next.js v15’s latest features for speed and responsiveness.

The development will follow three phases:
- **Essential MVP**: Core audio rooms, basic interactions, and authentication.
- **Polished**: AI enhancements and multimedia features.
- **Commercial**: Monetization, advanced AI, and experimental integrations.

---

## **2. Tech Stack**

- **Frontend Framework**: Next.js v15 (App Router) with TypeScript
- **Backend & API**: Next.js API routes (for server-side logic)
- **Database & Real-Time**: Convex (for real-time database, authentication, room management, and object storage)
- **Streaming**: LiveKit (for real-time audio/video streaming and WebRTC management)
- **Authentication**: Clerk (for user authentication and management)
- **UI Styling**: Tailwind CSS and Shadcn UI components
- **AI Integrations**:
  - **General AI**: Vercel SDK with OpenAI API (recommendations, summaries)
  - **Speech Processing**: Eleven Labs (speech-to-text for captions, text-to-speech for translations)
  - **Video Generation**: Luma AI
  - **Image Generation**: Fal AI
- **Optional**: 
  - Upstash (for caching or queues if needed)

---

## **3. Design Principles**

- **Modern and Futuristic**: Clean, spatial-like UI with gradients, subtle animations, and a focus on user experience.
- **Mobile-First**: Prioritize mobile layouts, ensuring seamless responsiveness across devices.
- **Pixel-Perfect**: Meticulous attention to detail in every UI component.
- **Performance-First**: Leverage Next.js optimizations (e.g., image optimization, code splitting, SSR) for a snappy, responsive feel.

---

## **4. Feature Breakdown by Iteration**

### **4.1 Essential MVP Features**

The MVP focuses on delivering a functional audio discussion platform with essential interactions and discovery features.

#### **4.1.1 Core Audio Experience**
- **Live Audio Rooms**:
  - Hosts can create real-time audio spaces for discussions.
  - Public or private access (invite-only).
  - Speaker management: mute, remove, or promote participants.
  - Co-hosting: appoint co-hosts to assist in session management.
- **Tech**:
  - Use WebRTC for peer-to-peer audio streaming.
  - Convex for real-time session state management (e.g., participant lists, speaker roles).

#### **4.1.2 Basic Interaction & Engagement**
- **Real-Time Reactions**:
  - Emoji reactions and a “raise hand” feature for participants.
- **Live Chat & Link Sharing**:
  - Parallel text chat for discussions and sharing links.
- **Integrated Captions**:
  - Automatic live captions using Eleven Labs’ speech-to-text.
- **Tech**:
  - Convex for real-time chat and reaction updates.
  - Eleven Labs API for generating live captions from audio streams.

#### **4.1.3 Session Discovery & Scheduling**
- **Titles & Scheduling**:
  - Hosts can name and schedule sessions.
  - Notifications for followers when sessions are scheduled or go live.
- **Replay & Recording**:
  - Option to record sessions for later replay.
- **Tech**:
  - Convex for storing session metadata and recordings.
  - Next.js API routes or serverless functions for notifications.

#### **4.1.4 Access & Authentication**
- **Social Sign-In & Native Authentication**:
  - Google, Facebook, Twitter (X), and email/phone signup.
- **Customizable Profiles & Social Features**:
  - Rich profiles with bio, followers, and session sharing.
- **Tech**:
  - Convex for authentication and user data management.
  - Next.js for rendering profile pages.

---

### **4.2 Polished Features**

This phase enhances the user experience with AI-driven features and multimedia capabilities.

#### **4.2.1 Enhanced AI-Driven Enhancements**
- **Real-Time AI Translation**:
  - Translate spoken language to the user’s preferred language.
  - Offer original and translated audio options.
- **AI Recommendations**:
  - Personalized session suggestions based on user interests and history.
- **AI Session Summaries**:
  - Smart text or audio recaps before joining a session.
- **Tech**:
  - Eleven Labs for speech-to-text and text-to-speech (for translations).
  - OpenAI API for generating recommendations and summaries.
  - Serverless functions on Vercel for AI processing.

#### **4.2.2 Expanded Multimedia Experience**
- **Live Video Rooms**:
  - Option to enable video alongside audio.
- **Screen Sharing**:
  - Hosts and approved speakers can share their screens.
- **Media Playback Control**:
  - Hosts can control media playback for all participants.
- **Watch Together**:
  - Collective viewing of videos, images, or YouTube content.
- **Tech**:
  - Extend WebRTC to support video and screen sharing.
  - Integrate media sources (e.g., YouTube) for synchronized playback.

---

### **4.3 Commercial Features**

This phase introduces monetization, advanced AI, and experimental features for deeper engagement.

#### **4.3.1 Interactive AI Engagement**
- **Ask AI About the Session**:
  - Users can query the AI for explanations or highlights during or after sessions.
- **AI-Generated Visual Content**:
  - Generate AI-driven videos or images based on discussion topics (e.g., dynamic backgrounds).
- **Tech**:
  - OpenAI API for session queries.
  - Luma AI for video generation.
  - Fal AI for image generation.

#### **4.3.2 Monetization Options & Advanced Social Tools**
- **Premium/Ticketed Sessions & Tip Jar**:
  - Hosts can charge for exclusive sessions or accept tips.
- **Advanced Virtual Effects**:
  - Virtual backgrounds, custom room themes, collaborative whiteboards.
- **Experimental Content Integrations**:
  - Integrations with other platforms for broader multimedia experiences.
- **Tech**:
  - Polar for payment processing.
  - Custom UI components for virtual effects and themes.
  - API integrations for external platforms.

---

## **5. Architecture & Implementation Strategy**

### **5.1 Frontend (Next.js v15 with App Router)**
- **Routing**: Use the new App Router for improved performance and navigation.
- **Pages**:
  - **Home**: Live and upcoming sessions, personalized recommendations.
  - **Profile**: User info, followers, hosted sessions.
  - **Session Creation**: Form for session details (title, schedule, privacy).
  - **Session Room**: Audio/video streams, chat, reactions, controls.
- **Real-Time Updates**: Use Convex’s real-time features for live data syncing (e.g., participant lists, chat messages).
- **UI Components**: Build with Tailwind and Shadcn for a modern, responsive design.

### **5.2 Backend (Convex)**
- **Database**: Store user data, session metadata, recordings, and chat logs.
- **Real-Time**: Handle real-time updates for audio rooms, chat, and reactions.
- **Authentication**: Manage social and native sign-ins.
- **Object Storage**: Store session recordings and media files.

### **5.3 AI Integrations**
- **Speech Processing**: Use Eleven Labs for live captions and translations.
- **General AI**: Use OpenAI API for recommendations, summaries, and session queries.
- **Visual Content**: Use Luma AI and Fal AI for generating videos and images (Commercial phase).

### **5.4 Performance Optimizations**
- **Next.js Features**: Leverage image optimization, code splitting, and SSR.
- **Caching**: Use Upstash for caching frequently accessed data (if needed).
- **Real-Time Efficiency**: Optimize Convex queries for minimal latency.

### **5.5 Security**
- **Authentication**: Secure sign-ins with Convex.
- **Authorization**: Role-based access for session management (hosts, co-hosts, speakers).
- **Payment Security**: Use Polar for secure transactions (Commercial phase).

### **5.6 Scalability**
- **Convex**: Designed for real-time scalability; monitor and optimize as user base grows.
- **WebRTC**: Ensure peer-to-peer connections are efficient; consider fallback to server-based streaming if needed.

---

## **6. UI/UX Design Guidelines**

- **Color Palette**: Modern, futuristic colors with gradients (e.g., blues, purples, soft whites).
- **Typography**: Clean, sans-serif fonts for readability.
- **Layouts**:
  - **Home**: Grid or list view for sessions, with filters and search.
  - **Session Room**: Clean interface with audio/video feeds, chat sidebar, and reaction controls.
- **Animations**: Subtle transitions and hover effects for a polished feel.
- **Accessibility**: Ensure live captions, keyboard navigation, and screen reader support.

---

## **7. Development Phases & Milestones**

### **Phase 1: Essential MVP**
- **Milestones**:
  - Authentication and user profiles.
  - Live audio rooms with speaker management.
  - Real-time chat, reactions, and captions.
  - Session scheduling and discovery.

### **Phase 2: Polished Features**
- **Milestones**:
  - AI translation, recommendations, and summaries.
  - Video rooms, screen sharing, and media playback.

### **Phase 3: Commercial Features**
- **Milestones**:
  - Monetization (ticketed sessions, tips).
  - Advanced AI (session queries, visual content).
  - Virtual effects and experimental integrations.

---

## **8. Testing & Quality Assurance**

- **Unit Tests**: For critical components and utilities.
- **Integration Tests**: For real-time features and AI integrations.
- **Performance Tests**: Monitor load times, real-time latency, and scalability.
- **User Testing**: Gather feedback on UI/UX, especially for mobile responsiveness.


IMPORTANT NOTE: THERE IS A FOLDER IN THE ROOT DIR THAT IS CALLED "reference-project", THE CODE INSIDE THIS FOLDER SHOULD NOT BE MODIFIED BY ANY MEANS, BUT IT MUST BE CHECKED CAREFULLY TO SOLVE PROBLEMS AND IMPLEMENT CODE OR THIS PROJECT, AS IT IS A GOOD WORKING IMPLEMENTATION OF A NEXT JS PROJECT WORKING WITH LIVEKIT FOR VIDEO STREAMING, AND THAT MUST BE IMPLEMENTED IN NEXTALK.


